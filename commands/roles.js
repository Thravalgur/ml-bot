const { SlashCommandBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder } = require('discord.js');
const errHandler = (err) => {console.error('ERREUR avec la commande /roles :', err);};
const config = require('../config.json');

module.exports = {
	data: new SlashCommandBuilder()
		.setName('roles')
		.setDescription('Envoyer le panneau de s√©lection des r√¥les'),
	async execute(interaction) {
		// embed du panneau
		const roleembed = new EmbedBuilder()
			.setTitle('R√¥les suppl√©mentaires')
			.setColor(config.Blue)
			.setDescription(`
			**Vous pouvez prendre des r√¥les sp√©ciaux sur le serveur, afin d'avoir acc√®s √† des fonctionnalit√©s suppl√©mentaires ou des salons de discussion sp√©ciaux.**\n\n
			*Pour prendre le r√¥le concern√©, il suffit d'utiliser les boutons en dessous du message ! Vous pouvez en prendre plusieurs en m√™me temps, en fonction de ce qui vous int√©resse. Vous pouvez aussi vous retirer le(s) r√¥le(s) que vous avez d√©j√† en appuyant de nouveau sur le(s) bouton(s) correspondant(s).*
			\n\n
			`)
			.addFields(
				{
					name:'Animations',
					value:`
					:scroll:  Si nos animations vous int√©ressent, le r√¥le <@&${config.animRole}> vous permettra d'√™tre notifi√© des jeux litt√©raires, d√©fis et autres activit√©s que notre √©quipe organisera !
					`,
				},
				{
					name:'Notifications',
					value:`
					:newspaper:  Si vous souhaitez √™tre notifi√© pour les annonces √©ventuelles relatives √† nos gagnants et/ou nos partenaires (sortie de roman, promotions qur le catalogue des ME, etc.), le r√¥le <@&${config.notifRole}> est fait pour vous ! 
					`,
				},
				{
					name:'Concours 2024',
					value:`
					:book:  Si vous avez inscrit un manuscrit √† la cinqui√®me √©dtion des Murmures Litt√©raires, vous pouvez acc√©der √† l'espace r√©serv√© aux <@&${config.inscritRole}> o√π vous pourrez discuter avec les autres inscrits !
					`,
				},
			);
		// boutons li√©s
		const rolerow = new ActionRowBuilder()
			.addComponents(
				new ButtonBuilder()
					.setCustomId('ask-anim')
					.setLabel('Scriptorium')
					.setEmoji('üìú')
					.setStyle(ButtonStyle.Success),
				new ButtonBuilder()
					.setCustomId('ask-notif')
					.setLabel('Notifications')
					.setEmoji('üì∞')
					.setStyle(ButtonStyle.Success),
				new ButtonBuilder()
					.setCustomId('ask-inscrit')
					.setLabel('Inscrit au concours')
					.setEmoji('üìñ')
					.setStyle(ButtonStyle.Primary),
			);
		// v√©rification des permissions avant l'envoi
		if (interaction.user.id === config.ownerId) {
			await interaction.channel.send({
				embeds: [roleembed],
				components: [rolerow],
			});
			await interaction.reply({
				content: 'Le panneau a bien √©t√© envoy√©',
				ephemeral: true,
			}).catch(errHandler)
				.then(console.log('Boutons des r√¥les envoy√©s !'));
		}
		else {
			await interaction.reply({
				content: '‚ùå Vous n\'avez pas l\'autorisation d\'utiliser cette commande.',
				ephemeral: true,
			});
		}
	},
};